-----------------------------------------------------------------------------------------------------------
# String #
-----------------------------------------------------------------------------------------------------------
1. Combine String Methods

string input = "  Welcome to LeetCode! ";
string result = input.Trim().ToLower().Replace(" ", "-");

Console.WriteLine(result);

2. String Interpolation & Concatenation

string name = "Bob";
int age = 25;

string result1 = "Name: " + name + ", Age: " + age;   // Concatenation
string result2 = $"Name: {name}, Age: {age}";         // Interpolation ✅

3. Looping Through a String

string s = "hello";
foreach (char c in s)
{
    Console.WriteLine(c);
}


4. Converting Strings <-> Char Arrays

string s = "code";
char[] arr = s.ToCharArray();      // String → Char Array
string newStr = new string(arr);   // Char Array → String

5. Reverse a string

string input = "hello";
char[] chars = input.ToCharArray();
Array.Reverse(chars);
string reversed = new string(chars);
Console.WriteLine(reversed); // Output: "olleh"


===========================================================================================================
using System;
using System.Collections.Generic;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        string name = "Alice";
        int age = 25 ;
        
        string result = "Name : " + name + ", Age :" + age;
        string result2 = $"Name : {name}, Age :{age}";
        
        Console.WriteLine(result);
        Console.WriteLine(result2);
        
        Console.WriteLine("Looping Through a String");
        string s = "hello";
        foreach(char c in s)
            Console.Write(c + "-");
            
        Console.WriteLine("Converting Strings <-> Char Arrays");
        string s1 = "code";
        char[] arr = s1.ToCharArray();      // String → Char Array
        string newStr = new string(arr);   // Char Array → String

        Console.WriteLine("Reverse String");
        string input = "hello";
        char[] chars = input.ToCharArray();
        Array.Reverse(chars);
        string reversed = new string(chars);
        Console.Write("Reversed : " + reversed);
        
        Console.WriteLine("Count vowels in a string : ");
        string ip = "leetcode";
        int count = 0 ;
       // char[] vowel = new char[8];
       
       // Use a list instead of char[] to store vowels dynamically
        List<char> vowels = new List<char>();
        foreach(char c in ip.ToLower())
        {
            if("aeiou".Contains(c))
            {
                vowels.Add(c);
                count++;
                
            }
        }
        string word = new string(vowels.ToArray());
        Console.WriteLine("Vowel count: " + count + "& Vowels are : "+ word);
        
       
    }
}
===========================================================================================================
-----------------------------------------------------------------------------------------------------------
# Array #
-----------------------------------------------------------------------------------------------------------
1. Printing array and sorted array 
int[] numbers = { 5, 2, 8, 3, 9 };

Console.WriteLine("Original Array:");
foreach (int num in numbers)
    Console.Write(num + " ");

Array.Sort(numbers);

Console.WriteLine("\nSorted Array:");
foreach (int num in numbers)
    Console.Write(num + " ");
-----------------------------------------------------------------------------------------------------------
# List #
-----------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;

public class HelloWorld
{
    public static void Main(string[] args)
    {
       List<string> names = new List<string>() { "Alice", "Bob", "Charlie" };
       foreach(string n in names)
            Console.WriteLine(n + " ");
    //find even Nos
       List<int> nums = new List<int> () {1,2,3,4,5,6};
        var evenNo = nums.Where(x => x % 2 == 0).ToList();
        
        Console.WriteLine(string.Join(",",evenNo ));  
        
        // Combine List Operations
        List<int> list = new List<int>() {3,1,4};
        list.Add(2);
        list.Sort();
        list.Reverse();
        
        foreach (int num in list)
            Console.Write(num + "");
        
    }
}

-----------------------------------------------------------------------------------------------------------
# Dictionary #
-----------------------------------------------------------------------------------------------------------
Dictionary <string,int> dict = new Dictionary<string, int> () {
        {"apple", 1},
    {"banana", 2},
    {"cherry", 3}
};

using System;
using System.Collections.Generic;
using System.Linq;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        Dictionary <string,int> dict = new Dictionary<string, int> () {
            {"apple", 1},
            {"banana", 2},
            {"cherry", 3}
        };
        
        foreach (var pair in dict)
            Console.WriteLine($"FruitName: {pair.Key}, Qty: {pair.Value}");
        
        Console.WriteLine(dict.Count);
        foreach (var key in dict.Keys)
            Console.WriteLine(key);
        foreach (var val in dict.Values)
            Console.WriteLine(val);
            
        // Frequency Counter
        string input = "Leetcode";
        Dictionary<char,int> freq = new Dictionary<char,int> ();
        
        foreach(char c in input)
        {
            if(freq.ContainsKey(c))
                freq[c]++;
            else
                freq[c] = 1;
        }  
        
        foreach (var pair in freq)
            Console.WriteLine($"{pair.Key} -> {pair.Value}");
            
    }
}
---------------------------------------------------------------------------------------------------------------------------------------
#stack
-----------------------------------------------------------------------------------------------------------------------------------------
// 1 Checking valid paranthesis

using System;
using System.Collections.Generic;
using System.Linq;

public class CheckValidParenthesis
{
    public static bool IsValid(string para)
    {
        Stack<char> stack = new Stack<char>();
        // here use single quote
        foreach (char c in para)
        {
            if(c == '(') stack.Push(')');
            else if (c == '{') stack.Push('}');
            else if (c == '[') stack.Push(']');
            else
            {
                if(stack.Count == 0 || stack.Pop() != c)
                    return false;
            }
        }
        return stack.Count == 0;
    }
    
    public static void Main(string[] args)
    {
       Console.Write("Enter a string with brackets: ");
        string input = Console.ReadLine();
        
        
        bool result = IsValid(input);
        
        if(result)
            Console.WriteLine("The input string has **valid** brackets.");
        else
            Console.WriteLine("The input string has **invalid** brackets.");
            
    }
}

2. Reverse string using Stack
using System;
using System.Collections.Generic;
using System.Linq;

public class Program {
    public static void Main(string [] args)
    {
        string input = "hello";
        Stack<char> stack = new Stack<char>();
        
        foreach(char c in input)
            stack.Push(c);
        
        string reversed = "";
        while(stack.Count > 0)
            reversed += stack.Pop();
            
        Console.WriteLine(reversed);
    }
}

----------------------------------------------------------------------------------------------------------------------------------------
# Queue
----------------------------------------------------------------------------------------------------------------------------------------
//1. Remove duplicates from Arrays

using System;
using System.Collections.Generic;

public class Program {
    
    public static bool ContainsDuplicate(int[] nums)
    {
        HashSet<int> seen = new HashSet<int>();
        
        foreach(int num in nums)
        {
            if(seen.Contains(num)) return true;
            seen.Add(num);
        }
        return false;
    }
    
    public static void Main(string [] args)
    {
        int[] nums = {1,2,3,1};
        bool result = ContainsDuplicate(nums);
        
        if(result)
            Console.WriteLine("Array contains duplicates.");
        else
            Console.WriteLine("Array does NOT contain duplicates.");
        
    }

}






















