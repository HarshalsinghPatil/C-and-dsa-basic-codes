top 10 sql queries (https://www.youtube.com/watch?v=ZML_EJrBhnY&t=1581s)
===========================================================================
1. Delete duplicate rows 
------------------------------ -----------------------------------------
-> Delete from cars
where model_id not in (select min(model_id)
			from cars 
			group by model_name,brand);

//This approach works but may fail if model_id contains NULL values (because NOT IN does not handle NULLs well).
-> DELETE FROM cars
WHERE model_id IN (SELECT max(model_id)
		   FROM cars
		   GROUP BY model_name, brand);

------------------------- Using joins -------------------------------------
Delete c1 
from cars c1 
Join cars c2
ON c1.model_name = c2.model_name
AND c1.brand = c2.brand
AND c1.model_id > c2.model_id;

===========================================================================
2. Second max salary , nth max salry highest salary
==========================================================================
2.1.highest salary
---------------------------------------------------------------------------
SELECT MAX(salary) FROM employees;

2.2. Second highest salary
---------------------------------------------------------------------------
SELECT MAX(salary) FROM employees
WHERE salary < (SELECT MAX(salary) FROM Employees);


2.3.Nth highest salary 
---------------------------------------------------------------------------
SELECT DISTINCT salary 
FROM employees 
ORDER BY salary DESC
LIMIT 1 OFFSET N-1
---------------------------------- B2B ===================================
ðŸ”¹What is LIMIT?
LIMIT is used in SQL to restrict the number of rows returned.

Example:

SELECT * FROM employees LIMIT 5;

This returns only the first 5 rows from the table.

ðŸ”¹ What is OFFSET?
OFFSET is used to skip a certain number of rows before selecting the remaining ones.

Example:

SELECT * FROM employees LIMIT 5 OFFSET 3;

Skips the first 3 rows.
Then selects the next 5 rows.


ðŸ”¹ Step-by-Step Explanation
SELECT DISTINCT salary: Selects unique salary values (removes duplicates).
FROM employees: Fetches data from the employees table.
ORDER BY salary DESC: Sorts salaries in descending order (highest salary comes first).
LIMIT 1: Picks only 1 row (the N-th highest salary).
OFFSET N-1 : Skips (N-1) salaries, then selects the next one.
===========================================================================
3. Show cumulative distance to daily distance: e.g. car shows travels some distance every day but we have given the cumulative reading in meter at the day end . show day wise distance travelled 
------------------------------------------------------------------------

--------------------------------- data -------------------------------CREATE TABLE car_travel (
    Date DATE,
    Car_ID INT,
    Cumulative_Distance INT
);

INSERT INTO car_travel (Date, Car_ID, Cumulative_Distance) VALUES
('2024-03-10', 1, 1000),
('2024-03-11', 1, 2500),
('2024-03-12', 1, 4000),
('2024-03-13', 1, 7000),
('2024-03-14', 1, 8500),

('2024-03-10', 2, 2000),
('2024-03-11', 2, 3200),
('2024-03-12', 2, 4200),
('2024-03-13', 2, 5500),
('2024-03-14', 2, 6800);
-------------------------------------------------------------------------
Window function used is Lag():
1. Subtracts previous day's cumulative reading from today's cumulative reading to get daily traveled distance.
2. Fetches the previous day's cumulative distance for each car.LAG(value, offset, default) â†’ LAG(column, 1, 0) gives the previous row's value

SELECT date,
	car_id,
	cumulative_distance,
	cumulative_distance - LAG(cumulative_distance,1,0) OVER(PARTITION BY car_id GROUP BY Date) AS daily_distance
FROM CAR_TRAVEL;

-------------------------------------------------------------------------

===========================================================================
4. Remove duplicate record of city distances :
 distance between indian cities of duplicated e.g.row 1 mumbai pune 400 km row 2 pune mumbai 400 km . Now i want to remove duplicates
---------------------------------------------------------------------------
create table CityDistance
(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	City1 varchar(100),
	City2 varchar(100),
	Distance INT
);

INSERT INTO CityDistances (City1, City2, Distance) VALUES
('Mumbai', 'Pune', 400),
('Pune', 'Mumbai', 400),
('Delhi', 'Agra', 200),
('Agra', 'Delhi', 200),
('Bangalore', 'Hyderabad', 600),
('Hyderabad', 'Bangalore', 600),
('Chennai', 'Kolkata', 1500); -- No duplicate for this one

---------- Distinct : Just show records ----------------------------
//  step 1: filter records 
SELECT DISTINCT 
CASE WHEN City1 < City2 THEN City1 ELSE City2 END AS City1,
CASE WHEN City1 < City2 THEN City2 ELSE City1 END AS City2,
Distance
FROM CityDistances;


step 2: Now apply above logic to save filtered data in new table and delete original and rename new one as original

SELECT DISTINCT 
    CASE WHEN City1 < City2 THEN City1 ELSE City2 END AS City1, --If City1 comes alphabetically before City2, keep it as is.
    CASE WHEN City1 < City2 THEN City2 ELSE City1 END AS City2,
    Distance
INTO CityDistances_New -- save as new table
FROM CityDistances;

DROP TABLE CityDistances;-- delete original table 
EXEC sp_rename 'CityDistances_New', 'CityDistances';-- rename new table with old table name 


--------------------- Delete ------------------------------
DELETE FROM CityDistances A
WHERE EXISTS (
    SELECT 1 FROM CityDistances B
    WHERE A.City1 = B.City2
    AND A.City2 = B.City1
    AND A.ID > B.ID
);

======================================================================================================================================================
Important sql queries a 2 yr experienced developer should able to perform 

======================================================================================================================================================

1] Basic crud:
--------------
1.1 create table : 
------------------
Create table Employees(
	id int identity(1,1) primary key,
	name varchar(50) not null,
	department varchar(50) ,
	salary decimal(10,2)

);

1.2. insert data in to table :
------------------------------
insert into Employees(id, name , department, salary)
values
(101, 'John Doe', 'IT', 60000),
(102, 'Jane Smith', 'HR', 55000),
(103, 'Alice Johnson', 'Finance', 70000),
(104, 'Bob Brown', 'IT', 65000),
(105, 'Charlie Davis', 'Marketing', 50000),
(106, 'Eve Wilson', 'HR', 58000),
(107, 'Frank White', 'Finance', 72000),
(108, 'Grace Hall', 'IT', 63000),
(109, 'Harry Green', 'Marketing', 51000),
(110, 'Ivy Adams', 'HR', 59000);

1.3. Now see all inserted data :
----------------------------===
select * from Employees;

1.4. Delete single record : 
===========================
delete from employee where id = 100;

1.5. Delete Multiple Records 
==========================
i]  DELETE FROM EMPLOYEES;
II] TRUNCATE TABLE EMPLOYEES; -- It also resets indexes


2] Filtering Data (WHERE, LIKE, IN, BETWEEN)
============================================
2.1> Get employees from IT or HR department
-------------------------------------------
SELECT * FROM Employees 
where department IN ('IT', 'HR');


